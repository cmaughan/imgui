language: cpp
dist: trusty

linux-gcc: &linux-gcc
  os: linux
  compiler: gcc
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - g++-7
        - cmake
        
linux-clang: &linux-clang
  os: linux
  compiler: clang
  addons:
    apt:
      sources:
        - llvm-toolchain-trusty-6.0
        - ubuntu-toolchain-r-test
      packages:
        - clang-6.0
        - cmake
        - g++-7
        
osx-gcc: &osx-gcc
  os: osx
  osx_image: xcode10
  compiler: gcc

osx-clang: &osx-clang
  os: osx
  osx_image: xcode10
  compiler: clang gcc

matrix:
  include:
    - <<: *linux-gcc
      env: BUILD_TYPE=Debug TEST_TARGET=test CMAKE_C_COMPILER=gcc-7 CMAKE_CXX_COMPILER=g++-7
    - <<: *linux-gcc
      env: BUILD_TYPE=Release TEST_TARGET=test CMAKE_C_COMPILER=gcc-7 CMAKE_CXX_COMPILER=g++-7
    - <<: *linux-clang
      env: BUILD_TYPE=Debug TEST_TARGET=test CMAKE_C_COMPILER=clang-6.0 CMAKE_CXX_COMPILER=clang++-6.0
    - <<: *linux-clang
      env: BUILD_TYPE=Release TEST_TARGET=test CMAKE_C_COMPILER=clang-6.0 CMAKE_CXX_COMPILER=clang++-6.0
    - <<: *linux-gcc
      env: BUILD_TYPE=Coverage TEST_TARGET=gen-cov CMAKE_C_COMPILER=gcc-7 CMAKE_CXX_COMPILER=g++-7 GCOV=gcov-7
    - <<: *linux-gcc
      env:
        - BUILD_TYPE=Coverity CMAKE_C_COMPILER=gcc-7 CMAKE_CXX_COMPILER=g++-7
        - COVERITY_SCAN_PROJECT_NAME="cmaughan/zep"
        - COVERITY_SCAN_NOTIFICATION_EMAIL="${TRAVIS_COVERITY_EMAIL}"
        - COVERITY_SCAN_BRANCH_PATTERN="coverity_scan"
        - COVERITY_SCAN_BUILD_COMMAND_PREPEND="cov-configure --comptype gcc --compiler gcc-7 --template"
        - COVERITY_SCAN_BUILD_COMMAND="cmake --build ."
        - secure: "aCDfyKaahei12wDEEitHMDSxwwtXpKKpwl+4ZHOd/kK+PAK6PHXnRblmHYQHvYvtXKZWU9Uv+qz5c9ZepCdb0uuQUYSCVWorkpJ8wgfu2W+mtqWF8qNCAjKlfemdQBzFPMOLzohFJu+eWS/x4orVWIpMUKvHU3yIzsdkQp3tGnYO3gJJ4FY792mVCpI/a3y2hy0ijrD+jswQcDYbyuveW4De6RR3t6V9UGxwzj7ADzXEymz0sZtNr8W7Rwa48fLTFdrqUohOHXvVncZWmHEG7ltx12+cJyLL/PI5+upfKobX/sSpMni/aSD8WwZlg1Nu/8PuRGD6B0SWcI4WITY9ZrHMGlLZRZs2FDwCD83jND1e95IDcesqGksT+08RKj0yVdZGrO9bOf1aVkS4EBUbFJLJpwaBWsBhA7YJip/Ys/cx/Gku13fBDrh3ACf/m/XXH6XCP+RFtPZq28/qBbG+WJ/PK+ZzJcJobmIkblhToQ367CZbZOGDK7ufGEhKySc4wZ9ZNvki/w78ajr9UTPB9QOt+yb8yEqjt/UoZmmKj58s9dkMbiQD3kKlKHPst4XyyV45VFnT5gO48DsDprX4/Xc6ugCyLgiOe4yXdC1GfizWBMDVS1t8ILFsVe//wC8YKwOcPh2ubYIHq+wPZ9QArsU0bNdu9psiEdpiEnz66dk="
    - <<: *osx-clang
      env: BUILD_TYPE=Debug TEST_TARGET=test CMAKE_C_COMPILER=clang CMAKE_CXX_COMPILER=clang++
    - <<: *osx-clang
      env: BUILD_TYPE=Release TEST_TARGET=test CMAKE_C_COMPILER=clang CMAKE_CXX_COMPILER=clang++
      
before_install: |
  if test "${BUILD_TYPE}" = "Coverity"; then
    if test "${TRAVIS_BRANCH}" != "${COVERITY_SCAN_BRANCH_PATTERN}"; then
      exit 0
    fi
    if test "${TRAVIS_PULL_REQUEST}" != "false"; then
      exit 0
    fi
  fi     

install: |
  source scripts/travis_install.sh

script: |
  source scripts/travis_script.sh

after_success: |
  source ${TRAVIS_BUILD_DIR}/scripts/travis_success.sh    
